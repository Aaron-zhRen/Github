@model AdminPortal.Models.Application

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-lg-7">
        @using (Html.BeginForm(new { add = "addApplication" }))
        {
            @Html.AntiForgeryToken()
            <div class="panel panel-default" style="padding-left:0px;padding-right:0px">
                <div class="panel-heading" style="background:#000000;font-style:inherit">
                    <i class="fa fa-bar-chart-o fa-fw" style="color:#ffffff;font-size:30px">Add Application</i>
                </div>
                <div class="panel-body">
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <!-- ApplicationName -->
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <!-- Email -->
                        <div class="form-group">
                            @Html.LabelFor(model => model.AlertEmails, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.AlertEmails, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.AlertEmails, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <!-- TenantName -->
                        <div class="form-group">
                            @Html.LabelFor(model => model.TenantId, "TenantName", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("TenantId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TenantId, "", new { @class = "text-danger" })
                                @Html.ActionLink("AddTenant", "Create", new { addsome = "AddTenant" })
                            </div>
                        </div>
                        <!-- AggGroupName -->
                        <div class="form-group">
                            @Html.LabelFor(model => model.AppGroupId, "AppGroupName", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("AppGroupId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.AppGroupId, "", new { @class = "text-danger" })
                                @Html.ActionLink("AddAppgroup", "Create", new { addsome = "AddAppgroup" })
                            </div>
                        </div>
                        <!-- Owner -->
                        <div class="form-group">
                            @Html.LabelFor(model => model.Owners, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Owners, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Owners, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <!-- EnableMonitor -->
                        <div class="form-group">
                            @Html.LabelFor(model => model.IsEnabled, "EnableMonitor", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.IsEnabled, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.IsEnabled, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <!-- EnableIcm -->
                        <div class="form-group">
                            @Html.LabelFor(model => model.IsIcmEnabled, "IsIcmEnable", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.IsIcmEnabled, new { htmlAttributes = new { @class = "form-control", @id = "icmisenablecontroller" } })
                                @Html.ValidationMessageFor(model => model.IsIcmEnabled, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group" id="IcmPanel">
                            @Html.LabelFor(model => model.IcmRoutingId, "Icm", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("IcmRoutingId", null, htmlAttributes: new { @class = "form-control", @id = "selectIcm" })
                                @Html.ValidationMessageFor(model => model.IcmRoutingId, "", new { @class = "text-danger" })
                                @Html.ActionLink("AddIcm", "Create", new { addsome = "AddIcm" })
                            </div>
                        </div>
                        <div>
                        </div>
                       

                    <!-- ICM set  -->
                            <div class="panel">
                            </div>
                            <div class="panel-body" id="selectedicm-panel">
                                <div class="form-group">
                                    Name: @ViewBag.SelsectedIcmName
                                </div>
                                <div class="form-group">
                                    RoutingId: @ViewBag.SelsectedRoutingId
                                </div>
                                <div class="form-group">
                                    ServiceName: @ViewBag.SelsectedCorrelationId
                                </div>
                                <div class="form-group">
                                    CorrelationId:@ViewBag.SelsectedCorrelationId
                                </div>
                            </div>
                            <!-- Environment set  -->
                            @RenderPage("~/Views/PartialPage/PartialPageEnvPanel.cshtml")
                            <div id="addEnvPanel">
                            </div>
                            <!--Add another envrionment-->
                            <button type="button" id="addanotherEnvrionmentPanel"><i class="fa fa-plus">Add EnvPanel</i></button>
</div>
                </div>
                <div class="panel-footer list-inline" style="float:right">
                    <input type="submit" value="Create" class="btn btn-default" />
                    <a href="~/AppGroups/Index"><input type="button" value="cancel" class="btn btn-default" /></a>
                </div>
            </div>
        }
    </div>
    <div class="col-lg-5">
        @if (ViewBag.showAddTenantPanel == true)
        {
            Html.RenderPartial("~/Views/PartialPage/PartialPageAddTenant.cshtml");
        } @if (ViewBag.showAddAppgroupPanel == true)
        {
            Html.RenderPartial("~/Views/PartialPage/PartialPageAddAppGroup.cshtml");
        } @if (ViewBag.showAddIcmPanel == true)
        {
            Html.RenderPartial("~/Views/PartialPage/PartialPageAddIcm.cshtml");
        } @if (ViewBag.showAddEnvironmentPanel == true)
        {
            Html.RenderPartial("~/Views/PartialPage/PartialPageAddEnv.cshtml");
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/moment")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/rencurrenceTypeController")

}
